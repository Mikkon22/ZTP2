{% extends 'base.html.twig' %}

{% block title %}{{ 'transaction.new_transaction'|trans }}{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h1 class="h3 mb-0">{{ 'transaction.create_new_transaction'|trans }}</h1>
                </div>
                <div class="card-body">
                    {{ form_start(form) }}
                        <div class="mb-3">
                            {{ form_label(form.transactionType, 'transaction.transaction_type') }}
                            <div class="btn-group w-100" role="group">
                                {{ form_widget(form.transactionType) }}
                            </div>
                            {{ form_errors(form.transactionType) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.title, 'transaction.title') }}
                            {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.title) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.amount, 'transaction.amount'|trans) }}
                            <div class="input-group">
                                {{ form_widget(form.amount, {'attr': {'class': 'form-control'}}) }}
                                <span class="input-group-text">z≈Ç</span>
                            </div>
                            {{ form_errors(form.amount) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.portfolio, 'transaction.portfolio') }}
                            {{ form_widget(form.portfolio, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.portfolio) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.category, 'transaction.category') }}
                            {{ form_widget(form.category, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.category) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.date, 'transaction.date') }}
                            {{ form_widget(form.date, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.date) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.description, 'transaction.description') }}
                            {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.tags, 'transaction.tags') }}
                            <div class="d-flex">
                                <div class="flex-grow-1">
                                    {{ form_widget(form.tags, {'attr': {'class': 'select2', 'data-placeholder': 'transaction.select_or_create_tags'|trans}}) }}
                                    {{ form_errors(form.tags) }}
                                </div>
                                <button type="button" class="btn btn-outline-primary ms-2" data-bs-toggle="modal" data-bs-target="#newTagModal">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="{{ path('app_transaction_index') }}" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> {{ 'nav.back_to_list'|trans }}
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> {{ 'transaction.create_transaction'|trans }}
                            </button>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- New Tag Modal -->
<div class="modal fade" id="newTagModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">{{ 'transaction.create_new_tag'|trans }}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newTagName" class="form-label">{{ 'transaction.tag_name'|trans }}</label>
                    <input type="text" class="form-control" id="newTagName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'transaction.cancel'|trans }}</button>
                <button type="button" class="btn btn-primary" id="createTagBtn">{{ 'transaction.create_tag'|trans }}</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function() {
            // Initialize Select2
            $('.select2').select2({
                theme: 'bootstrap-5',
                width: '100%'
            });

            // Handle transaction type change - update category options via AJAX
            // Radio buttons with expanded=true have IDs like form_transactionType_0, form_transactionType_1
            $('input[name="{{ form.transactionType.vars.full_name }}"]').change(function() {
                const transactionType = $(this).val();
                const categorySelect = $('#{{ form.category.vars.id }}');
                
                console.log('Transaction type changed to:', transactionType);
                console.log('Category select element:', categorySelect);
                
                // Show loading state
                categorySelect.prop('disabled', true).html('<option>{{ 'common.loading'|trans }}</option>');
                
                // Fetch categories for selected transaction type
                const csrfToken = '{{ csrf_token('transaction-type') }}';
                console.log('CSRF Token:', csrfToken);
                
                fetch('{{ path('app_transaction_get_categories') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-CSRF-TOKEN': csrfToken
                    },
                    body: 'transactionType=' + encodeURIComponent(transactionType)
                })
                .then(response => {
                    console.log('Response status:', response.status);
                    if (!response.ok) {
                        throw new Error('HTTP ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Response data:', data);
                    if (data.success) {
                        // Clear and populate category options
                        categorySelect.empty().append('<option value="">{{ 'common.choose_category'|trans }}</option>');
                        if (data.categories && data.categories.length > 0) {
                            data.categories.forEach(function(category) {
                                categorySelect.append(new Option(category.name, category.id));
                            });
                        } else {
                            categorySelect.append('<option disabled>{{ 'common.no_categories_found'|trans }}</option>');
                        }
                    } else {
                        console.error('{{ 'common.error_loading_categories'|trans }}:', data.error);
                        categorySelect.html('<option>{{ 'common.error_loading_categories'|trans }}</option>');
                    }
                })
                .catch(error => {
                    console.error('{{ 'common.error'|trans }}:', error);
                    categorySelect.html('<option>{{ 'common.error_loading_categories'|trans }}</option>');
                })
                .finally(() => {
                    categorySelect.prop('disabled', false);
                });
            });

            // Handle tag creation
            $('#createTagBtn').click(function() {
                const tagName = $('#newTagName').val();
                if (!tagName) {
                    alert('{{ 'common.please_enter_tag_name'|trans }}');
                    return;
                }

                fetch('{{ path('app_tag_ajax_new') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token('ajax-tag') }}'
                    },
                    body: JSON.stringify({ name: tagName })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Add new option to select2
                        const select = $('.select2');
                        const option = new Option(data.tag.name, data.tag.id, true, true);
                        select.append(option).trigger('change');
                        
                        // Close modal and clear input
                        $('#newTagName').val('');
                        $('#newTagModal').modal('hide');
                    } else {
                        alert(data.error || '{{ 'common.failed_to_create_tag'|trans }}');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('{{ 'common.failed_to_create_tag'|trans }}');
                });
            });
        });
    </script>
{% endblock %} 